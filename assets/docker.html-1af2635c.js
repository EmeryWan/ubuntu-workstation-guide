import{_ as l,M as c,p as o,q as t,R as n,t as s,N as e,a1 as i}from"./framework-96b046e1.js";const r="/ubuntu-workstation-guide/images/docs/code/install/docker/docker-desktop.png",d={},p=n("div",{class:"language-text","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,` _________________________
< ubuntu 中安装 Docker >
 -------------------------
        \\   ^__^
         \\  (�)\\_______
            (__)\\       )\\/\\
                ||----w |
                ||     ||
`)])],-1),u=n("h2",{id:"apt-安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#apt-安装","aria-hidden":"true"},"#"),s(" APT 安装")],-1),v=n("p",null,[s("在 "),n("code",null,"ubuntu"),s(" 软件源中已经包含了 "),n("code",null,"Docker"),s(" 的相关软件包。这些软件包不是最新版本，但相对来说版本也比较靠前，完全够平常的使用和学习。")],-1),k={href:"https://docs.docker.com/engine/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"},m=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">docker</span> docker.io <span class="token function">docker-compose</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果不想添加 <code>sudo</code> 使用相关命令，可以将当前用户加入 <code>docker</code> 用户组。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建 docker 用户组</span>
<span class="token function">sudo</span> <span class="token function">groupadd</span> <span class="token function">docker</span>

<span class="token comment"># 将当前用户加入 docker 用户组</span>
<span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> <span class="token variable">\${<span class="token environment constant">USER</span>}</span>

<span class="token comment"># 注销重新登录，或使用以下命令激活改变的用户组</span>
newgrp <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker-官方源安装" tabindex="-1"><a class="header-anchor" href="#docker-官方源安装" aria-hidden="true">#</a> Docker 官方源安装</h2><p>如果想要获取最近的 <code>Docker</code> 版本，需要添加官网 <code>apt</code> 源。鉴于国内网络问题，强烈建议使用国内源。</p><ul><li>卸载旧版本（若有）</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
            docker-engine <span class="token punctuation">\\</span>
            docker.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>添加使用 HTTPS 传输的软件包以及 CA 证书。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update

<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token punctuation">\\</span>
    apt-transport-https <span class="token punctuation">\\</span>
    ca-certificates <span class="token punctuation">\\</span>
    <span class="token function">curl</span> <span class="token punctuation">\\</span>
    gnupg <span class="token punctuation">\\</span>
    lsb-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>添加软件源的 GPG 密钥。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token parameter variable">-o</span> /usr/share/keyrings/docker-archive-keyring.gpg

<span class="token comment"># 官方源</span>
<span class="token comment"># curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>向 sources.list 中添加 Docker 软件源</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token punctuation">\\</span>
<span class="token string">&quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \\
<span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/docker.list <span class="token operator">&gt;</span> /dev/null

<span class="token comment"># 官方源</span>
<span class="token comment"># echo \\</span>
<span class="token comment">#   &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\</span>
<span class="token comment">#   $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>安装</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update

<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> docker-ce docker-ce-cli containerd.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常见命令" tabindex="-1"><a class="header-anchor" href="#常见命令" aria-hidden="true">#</a> 常见命令</h2><h3 id="镜像相关" tabindex="-1"><a class="header-anchor" href="#镜像相关" aria-hidden="true">#</a> 镜像相关</h3><ul><li>🔍 搜索</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> search mysql

<span class="token comment"># 官方镜像</span>
<span class="token function">docker</span> search <span class="token parameter variable">--filter</span><span class="token operator">=</span>is-offical<span class="token operator">=</span>true mysql

<span class="token comment"># Stars 超过 100</span>
<span class="token function">docker</span> search <span class="token parameter variable">--filter</span><span class="token operator">=</span>stars<span class="token operator">=</span><span class="token number">100</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>⏬ 下载</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mysql:5.7

<span class="token function">docker</span> pull docker.io/mysql:5.7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>💻 信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> images

<span class="token function">docker</span> image <span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>❌ 删除</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># docker rmi [Id]/[镜像名]</span>
<span class="token function">docker</span> image rmi ee7cbd482336

<span class="token function">docker</span> rmi <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-q</span><span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器相关" tabindex="-1"><a class="header-anchor" href="#容器相关" aria-hidden="true">#</a> 容器相关</h3><ul><li>💻 启动</li></ul><p>创建一个新的容器，常用参数有:</p><blockquote><p>-d --detach=false 指定后台运行</p><p>-i --interactive=false 交互运行，打开STDIN (-it)</p><p>-t --tty=false 分配tty</p><p>-P --public-all=false 随机分配映射端口</p><p>-p --publish=[] 宿主机:容器</p><p>-e --env=[] 指定环境变量</p><p>-v --volume=[] 挂载储存卷</p><p>-w --workdir=&quot;&quot; 指定容器的工作目录</p><p>--name thisname 分配容器名</p><p>--rm 容器停止后删除（不支持 docker run -d）</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> mynginx <span class="token punctuation">\\</span>
            <span class="token parameter variable">-p</span> <span class="token number">11180</span>:80 <span class="token punctuation">\\</span>          <span class="token comment"># 映射容器80端口到11180 (TCP)</span>
            <span class="token parameter variable">-p</span> <span class="token number">11180</span>:80/udp <span class="token punctuation">\\</span>      <span class="token comment"># UDP</span>
            <span class="token parameter variable">-v</span> /var/docker/nginx:/data <span class="token punctuation">\\</span>       <span class="token comment"># 将容器/data目录挂载到/var/docker/nginx</span>
            <span class="token parameter variable">-d</span> nginx:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>👨‍💻 进入</li></ul><p>进入容器，在运行的容器中执行命，使用 <code>docker exec -it</code></p><blockquote><p>-i --interactive=false 交互运行 -t --tty=false 分配tty</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mynginx /bin/bash

<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> 7960423d62b8 python

<span class="token comment"># 以交互的方式执行容器中的 /root/run.sh 脚本</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mynginx /bin/sh /root/run.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>❌ 删除</li></ul><p>可以使用 <code>docker container rm / docker rm</code> 来删除一个处于<strong>终止状态</strong>的容器。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> container <span class="token function">rm</span> mynginx

<span class="token comment"># 清理所有处于终止状态的容器</span>
<span class="token function">docker</span> <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-q</span><span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="管理工具" tabindex="-1"><a class="header-anchor" href="#管理工具" aria-hidden="true">#</a> 管理工具</h2><h3 id="docker-desktop" tabindex="-1"><a class="header-anchor" href="#docker-desktop" aria-hidden="true">#</a> Docker Desktop</h3>`,39),b={href:"https://docs.docker.com/desktop/linux/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"},h=i('<p>如果想使用 Docker Desktop，请按照 Docker 官方源安装方式。</p><p><img src="'+r+'" alt="docker-desktop"></p><h3 id="vs-code" tabindex="-1"><a class="header-anchor" href="#vs-code" aria-hidden="true">#</a> VS Code</h3><p>在 Visual Studio Code 中安装 Docker 扩展。（需要当前用户能够使用 docker 命令）</p><h3 id="gnome-扩展" tabindex="-1"><a class="header-anchor" href="#gnome-扩展" aria-hidden="true">#</a> Gnome 扩展</h3>',5),g={href:"https://extensions.gnome.org/extension/5103/docker/",target:"_blank",rel:"noopener noreferrer"},f=n("h2",{id:"学习更多",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#学习更多","aria-hidden":"true"},"#"),s(" 学习更多")],-1),_=n("code",null,"Docker",-1),x={href:"https://yeasy.gitbook.io/docker_practice",target:"_blank",rel:"noopener noreferrer"},y=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),s(" 参考")],-1),q={href:"https://yeasy.gitbook.io/docker_practice",target:"_blank",rel:"noopener noreferrer"},D={href:"https://docs.docker.com/engine/install/linux-postinstall/",target:"_blank",rel:"noopener noreferrer"};function S(w,N){const a=c("ExternalLinkIcon");return o(),t("div",null,[p,u,v,n("p",null,[s("如果有特殊要求，可以通过"),n("a",k,[s("官网文档"),e(a)]),s("了解更多。")]),m,n("p",null,[n("a",b,[s("传送门"),e(a)])]),h,n("p",null,[n("a",g,[s("Gnoem 扩展"),e(a)])]),f,n("p",null,[s("如果想要学习更多与 "),_,s(" 相关的内容，可以参考："),n("a",x,[s("Docker-从入门到实践"),e(a)])]),y,n("ul",null,[n("li",null,[s("🔗 "),n("a",q,[s("https://yeasy.gitbook.io/docker_practice"),e(a)])]),n("li",null,[s("🔗 "),n("a",D,[s("https://docs.docker.com/engine/install/linux-postinstall/"),e(a)])])])])}const T=l(d,[["render",S],["__file","docker.html.vue"]]);export{T as default};
