import{_ as a,p as s,q as n,a1 as e}from"./framework-96b046e1.js";const t={},c=e(`<div class="language-text" data-ext="text"><pre class="language-text"><code> ___________
&lt; 常用内容 &gt;
 -----------
        \\   ^__^
         \\  (..)\\_______
            (__)\\       )\\/\\
                ||----w |
                ||     ||
</code></pre></div><h1 id="常用内容" tabindex="-1"><a class="header-anchor" href="#常用内容" aria-hidden="true">#</a> 常用内容</h1><div class="custom-container tip"><p class="custom-container-title">提示</p><p>本节内容主要介绍一些在日常使用时，经常需要的内容。持续更新中。</p></div><h2 id="🍿-快速打开-关闭终端" tabindex="-1"><a class="header-anchor" href="#🍿-快速打开-关闭终端" aria-hidden="true">#</a> 🍿 快速打开/关闭终端</h2><p>快速打开快捷键：<code>ctrl + alt + t</code></p><p>快速关闭快捷键：<code>ctrl + d</code></p><h2 id="🍪-在文件管理器中查看隐藏内容" tabindex="-1"><a class="header-anchor" href="#🍪-在文件管理器中查看隐藏内容" aria-hidden="true">#</a> 🍪 在文件管理器中查看隐藏内容</h2><p>以 <code>.</code> 开头的文件和文件夹通常会被隐藏，可以通过 <code>ctrl + h</code> 显示或隐藏这些内容。</p><h2 id="🍩-终端使用代理" tabindex="-1"><a class="header-anchor" href="#🍩-终端使用代理" aria-hidden="true">#</a> 🍩 终端使用代理</h2><p>由于一些网络原因，有时候使用终端时，需要利用代理获得更好的体验，可以使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 端口号请更改为实际端口号</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">https_proxy</span><span class="token operator">=</span>http://127.0.0.1:7890<span class="token punctuation">;</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">http_proxy</span><span class="token operator">=</span>http://127.0.0.1:7890<span class="token punctuation">;</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">all_proxy</span><span class="token operator">=</span>socks5://127.0.0.1:7890

<span class="token comment"># 取消代理</span>
<span class="token builtin class-name">unset</span> http_proxy<span class="token punctuation">;</span><span class="token builtin class-name">unset</span> https_proxy<span class="token punctuation">;</span><span class="token builtin class-name">unset</span> all_proxy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以加该命令起一个别名，放入配置文件中，方式使用。</p><p>根据使用的终端，<code>zsh -&gt; ~/.zshrc</code>，<code>bash -&gt; ~/.bashrc</code> 中进行添加：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 可根据喜好取别名的名称</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">exp</span><span class="token operator">=</span><span class="token string">&quot;export https_proxy=http://127.0.0.1:7890;export http_proxy=http://127.0.0.1:7890;export all_proxy=socks5://127.0.0.1:7890&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>配置完成后，<code>source .zhsrc / source .bashrc</code>，即可通过 <code>exp</code> 执行以上命令。</p><h2 id="🍯-其他" tabindex="-1"><a class="header-anchor" href="#🍯-其他" aria-hidden="true">#</a> 🍯 其他</h2><p>想到了再加。。。</p>`,17),p=[c];function o(l,i){return s(),n("div",null,p)}const d=a(t,[["render",o],["__file","ubuntu.html.vue"]]);export{d as default};
