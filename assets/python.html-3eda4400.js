import{_ as c,M as t,p as i,q as l,R as n,t as a,N as s,a1 as o}from"./framework-96b046e1.js";const r={},d=o(`<div class="language-text" data-ext="text"><pre class="language-text"><code> ____________________________________
&lt; 在 ubuntu 中安装 Python 环境 &gt;
 ------------------------------------
        \\   ^__^
         \\  (**)\\_______
            (__)\\       )\\/\\
             U  ||----w |
                ||     ||
</code></pre></div><h2 id="本地-python-环境" tabindex="-1"><a class="header-anchor" href="#本地-python-环境" aria-hidden="true">#</a> 本地 Python 环境</h2><div class="custom-container danger"><p class="custom-container-title">🚧</p><p>在所有 <code>Linux</code> 桌面环境中，通常都会预装 <code>Python</code> 环境。🌰 例如，在 <code>Ubuntu 16.04</code> 中，预装了 <code>Python 2.7</code> 和 <code>Python 3.5</code>。 <br> 并且，系统中有大量的的脚本文件都基于 <code>Python</code> 编写，更改系统默认 <code>Python</code> 版本，可能会造成系统运行问题。<br><br> 🌰 假设，当前正在使用 <code>Ubuntu 16.04</code>，为了使用 <code>Python 3.8</code>，进行了直接安装，并替换了默认 <code>Python</code> 版本，由于 <code>Python</code> 不同版本间部分 API 的调整和一些兼容性问题，会导致部分命令无法运行。🌰 例如，进行如上操作后系统自带的 <code>Terminal</code> 桌面应用无法打开（由于 API 调整，无法运行打开应用的脚本）。<br><br><span style="color:red;">强烈建议非必要原因，不要使用系统自带的 Python 环境，而是使用工具创建虚拟环境。</span></p></div><h3 id="python-国内源" tabindex="-1"><a class="header-anchor" href="#python-国内源" aria-hidden="true">#</a> Python 国内源</h3><p>Python 国内镜像众多且速度良好，可以选择任一合适的镜像，以下为部分列表：</p><p>在家目录 <code>/home/{USER_NAME}</code> 中新建 <code>.pip/pip.conf</code> 文件，并写入如下内容：</p><ul><li>📀 阿里云</li></ul><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>[global]
index-url = https://mirrors.aliyun.com/pypi/simple/
trusted-host = mirrors.aliyun.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>📀 腾讯云</li></ul><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>[global]
index-url = http://mirrors.cloud.tencent.com/pypi/simple
trusted-host = mirrors.cloud.tencent.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>📀 华为云</li></ul><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>[global]
index-url = https://repo.huaweicloud.com/repository/pypi/simple
trusted-host = repo.huaweicloud.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用-pyenv-管理" tabindex="-1"><a class="header-anchor" href="#使用-pyenv-管理" aria-hidden="true">#</a> 使用 pyenv 管理</h2><p>TODO</p><h2 id="使用-conda-管理" tabindex="-1"><a class="header-anchor" href="#使用-conda-管理" aria-hidden="true">#</a> 使用 conda 管理</h2><p>如果有机器学习，深度学习或数据处理等相关需要，推荐使用 <code>conda</code> 管理。</p><p>不同的训练框架和版本可能会需要 <code>Python</code> 版本相对应，不同的项目可能也会有不同的环境需求，使用 <code>conda</code> 根据需求新建对应的虚拟环境，在需要的时候随时切换。可以选择以下工具：</p>`,17),p={href:"https://www.anaconda.com/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://conda-forge.org/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/conda-forge/miniforge#mambaforge",target:"_blank",rel:"noopener noreferrer"},m=n("h3",{id:"miniforge",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#miniforge","aria-hidden":"true"},"#"),a(" Miniforge")],-1),v={href:"https://github.com/conda-forge/miniforge#miniforge3",target:"_blank",rel:"noopener noreferrer"},_=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token variable">\${DOWNLOAD_DIR}</span>

<span class="token function">chmod</span> +x ./Miniforge3-<span class="token punctuation">{</span>Version<span class="token punctuation">}</span>-MacOSX-<span class="token punctuation">{</span>Architecture<span class="token punctuation">}</span>.sh
./Miniforge3-<span class="token punctuation">{</span>Version<span class="token punctuation">}</span>-MacOSX-<span class="token punctuation">{</span>Architecture<span class="token punctuation">}</span>.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="anaconda" tabindex="-1"><a class="header-anchor" href="#anaconda" aria-hidden="true">#</a> Anaconda</h3><p>推荐在国内镜像源下载，以获得更好的网络体验。推荐选择以下等国内地址：</p>`,3),b={href:"https://developer.aliyun.com/mirror/anaconda",target:"_blank",rel:"noopener noreferrer"},k={href:"https://mirrors.bfsu.edu.cn/help/anaconda/",target:"_blank",rel:"noopener noreferrer"},g=o(`<p>下载完成后运行以下命令，再按提示进行安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token variable">\${DOWNLOAD_DIR}</span>

<span class="token function">chmod</span> +x ./Anaconda3-<span class="token punctuation">{</span>Version<span class="token punctuation">}</span>-Linux-<span class="token punctuation">{</span>Architecture<span class="token punctuation">}</span>.sh
./Anaconda3-<span class="token punctuation">{</span>Version<span class="token punctuation">}</span>-Linux-<span class="token punctuation">{</span>Architecture<span class="token punctuation">}</span>.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conda-国内源" tabindex="-1"><a class="header-anchor" href="#conda-国内源" aria-hidden="true">#</a> Conda 国内源</h3>`,3),f={href:"https://developer.aliyun.com/mirror/anaconda",target:"_blank",rel:"noopener noreferrer"},y=o(`<p>在家目录 <code>/home/{USER_NAME}</code> 中新建 <code>.condarc</code> 文件，并写入如下内容：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">channels</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> defaults
<span class="token key atrule">show_channel_urls</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">default_channels</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> http<span class="token punctuation">:</span>//mirrors.aliyun.com/anaconda/pkgs/main
  <span class="token punctuation">-</span> http<span class="token punctuation">:</span>//mirrors.aliyun.com/anaconda/pkgs/r
  <span class="token punctuation">-</span> http<span class="token punctuation">:</span>//mirrors.aliyun.com/anaconda/pkgs/msys2
<span class="token key atrule">custom_channels</span><span class="token punctuation">:</span>
  <span class="token key atrule">conda-forge</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//mirrors.aliyun.com/anaconda/cloud
  <span class="token key atrule">msys2</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//mirrors.aliyun.com/anaconda/cloud
  <span class="token key atrule">bioconda</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//mirrors.aliyun.com/anaconda/cloud
  <span class="token key atrule">menpo</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//mirrors.aliyun.com/anaconda/cloud
  <span class="token key atrule">pytorch</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//mirrors.aliyun.com/anaconda/cloud
  <span class="token key atrule">simpleitk</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//mirrors.aliyun.com/anaconda/cloud
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置完成后，运行 <code>conda clean -i</code> 清除索引缓存。</p>`,3);function x(P,A){const e=t("ExternalLinkIcon");return i(),l("div",null,[d,n("ul",null,[n("li",null,[a("☁️ "),n("a",p,[a("Anaconda / Miniconda"),s(e)])]),n("li",null,[a("🌥 "),n("a",u,[a("Miniforge"),s(e)])]),n("li",null,[a("⛅️ "),n("a",h,[a("Mambaforge"),s(e)])])]),m,n("p",null,[a("在 "),n("a",v,[a("此链接"),s(e)]),a(" 选择适合的版本，下载后运行以下命令，再按提示进行安装。")]),_,n("ul",null,[n("li",null,[a("💿 "),n("a",b,[a("阿里云"),s(e)])]),n("li",null,[a("📀 "),n("a",k,[a("北京外国语"),s(e)])])]),g,n("p",null,[a("推荐使用 💿 "),n("a",f,[a("阿里云"),s(e)]),a("。")]),y])}const N=c(r,[["render",x],["__file","python.html.vue"]]);export{N as default};
