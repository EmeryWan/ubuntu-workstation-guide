import{_ as t,M as o,p as i,q as c,R as s,t as n,N as e,a1 as l}from"./framework-96b046e1.js";const r="/ubuntu-workstation-guide/images/docs/code/install/mysql/download.png",p={},d=l(`<div class="language-text" data-ext="text"><pre class="language-text"><code> ______________________________________
&lt; 在 ubuntu 中安装 MySQL 数据库 &gt;
 --------------------------------------
        \\   ^__^
         \\  (==)\\_______
            (__)\\       )\\/\\
                ||----w |
                ||     ||
</code></pre></div><h2 id="apt-安装" tabindex="-1"><a class="header-anchor" href="#apt-安装" aria-hidden="true">#</a> APT 安装</h2><p>在 ubuntu 的软件源中，已经包含了 MySQL 数据库。</p><div class="custom-container tip"><p class="custom-container-title">🚧 提示</p><p>不同版本的 ubuntu，软件源中内置版本可能不同。</p><p>在 <code>18.04 LTS</code> 中，可以直接安装 <code>mysql-server-5.7</code> 和 <code>mysql-server-8.0</code>。 在最近的 <code>20.04 LTS</code> 和 <code>22.04 LTS</code> 中，软件源中默认只包含 <code>mysql-server-8.0</code>。</p></div><p>如果没有特别需求，用做日常或学习使用，可以直接用命令安装 MySQL 数据库。以下以安装 <code>MySQL 8.0</code> 为例。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> mysql-server-8.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完成后，MySQL 服务会自动启动。可以输入以下命令检查 MySQL 服务是否正在运行。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status mysql.server

<span class="token comment"># output</span>
● mysql.service - MySQL Community Server
     Loaded: loaded <span class="token punctuation">(</span>/lib/systemd/system/mysql.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: enabled<span class="token punctuation">)</span>
     Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Fri <span class="token number">2022</span>-05-13 <span class="token number">15</span>:19:06 CST<span class="token punctuation">;</span> 5h 30min ago
    Process: <span class="token number">762</span> <span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>/usr/share/mysql/mysql-systemd-start pre <span class="token punctuation">(</span>code<span class="token operator">=</span>exited, <span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token number">0</span>/SUCCESS<span class="token punctuation">)</span>
   Main PID: <span class="token number">1100</span> <span class="token punctuation">(</span>mysqld<span class="token punctuation">)</span>
     Status: <span class="token string">&quot;Server is operational&quot;</span>
      Tasks: <span class="token number">38</span> <span class="token punctuation">(</span>limit: <span class="token number">4603</span><span class="token punctuation">)</span>
     Memory: <span class="token number">420</span>.6M
     CGroup: /system.slice/mysql.service
             └─1100 /usr/sbin/mysqld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以使用以下命令来管理 MySQL 服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl status mysql.server
<span class="token function">sudo</span> systemctl start mysql.server
<span class="token function">sudo</span> systemctl stop mysql.server
<span class="token function">sudo</span> systemctl restart mysql.server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="👨‍💻-登陆-mysql" tabindex="-1"><a class="header-anchor" href="#👨‍💻-登陆-mysql" aria-hidden="true">#</a> 👨‍💻 登陆 MySQL</h3><h4 id="使用默认帐户" tabindex="-1"><a class="header-anchor" href="#使用默认帐户" aria-hidden="true">#</a> 使用默认帐户</h4><p>可以在 <code>/etc/mysql/debian.cnf</code> 查看默认用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">cat</span> /etc/mysql/debian.cnf

<span class="token comment"># output</span>
<span class="token comment"># Automatically generated for Debian scripts. DO NOT TOUCH!</span>
<span class="token punctuation">[</span>client<span class="token punctuation">]</span>
<span class="token function">host</span>     <span class="token operator">=</span> localhost
user     <span class="token operator">=</span> debian-sys-maint
password <span class="token operator">=</span> iJBWEP5RGCJcbVFr
socket   <span class="token operator">=</span> /var/run/mysqld/mysqld.sock
<span class="token punctuation">[</span>mysql_upgrade<span class="token punctuation">]</span>
<span class="token function">host</span>     <span class="token operator">=</span> localhost
user     <span class="token operator">=</span> debian-sys-maint
password <span class="token operator">=</span> iJBWEP5RGCJcbVFr
socket   <span class="token operator">=</span> /var/run/mysqld/mysqld.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="通过管理员-推荐" tabindex="-1"><a class="header-anchor" href="#通过管理员-推荐" aria-hidden="true">#</a> 通过管理员（推荐）</h4><p>可以通过以下命令，输入管理员密码后，进入 MySQL。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> mysql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="🧑‍🔧-为-root-用户设置密码" tabindex="-1"><a class="header-anchor" href="#🧑‍🔧-为-root-用户设置密码" aria-hidden="true">#</a> 🧑‍🔧 为 root 用户设置密码</h3><p>在新安装的 MySQL 数据库中，已经包含了一个 <code>&#39;root&#39;@&#39;localhost&#39;</code> 的账号，我们可以给这个 root 用户重设一个密码。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查询 Mysql 账户</span>
<span class="token operator">&gt;</span> use mysql
<span class="token operator">&gt;</span> <span class="token keyword">select</span> host, user, authentication_string from user<span class="token punctuation">;</span>

<span class="token comment"># output</span>
+-----------+------------------+------------------------------------------------------------------------+
<span class="token operator">|</span> <span class="token function">host</span>      <span class="token operator">|</span> user             <span class="token operator">|</span> authentication_string                                                  <span class="token operator">|</span>
+-----------+------------------+------------------------------------------------------------------------+
<span class="token operator">|</span> localhost <span class="token operator">|</span> debian-sys-maint <span class="token operator">|</span> <span class="token variable">$A</span><span class="token variable">$005</span><span class="token variable">$b</span> IWBI,u<span class="token punctuation">;</span>bR<span class="token comment">#zJ.frbgxq1ZBQOB56xU1Tk6PbZ.xiZMl50eIRl4xioTj0B |</span>
<span class="token operator">|</span> localhost <span class="token operator">|</span> mysql.infoschema <span class="token operator">|</span> <span class="token variable">$A</span><span class="token variable">$005</span><span class="token variable">$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED</span> <span class="token operator">|</span>
<span class="token operator">|</span> localhost <span class="token operator">|</span> mysql.session    <span class="token operator">|</span> <span class="token variable">$A</span><span class="token variable">$005</span><span class="token variable">$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED</span> <span class="token operator">|</span>
<span class="token operator">|</span> localhost <span class="token operator">|</span> mysql.sys        <span class="token operator">|</span> <span class="token variable">$A</span><span class="token variable">$005</span><span class="token variable">$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED</span> <span class="token operator">|</span>
<span class="token operator">|</span> localhost <span class="token operator">|</span> root             <span class="token operator">|</span>                                                                        <span class="token operator">|</span>
+-----------+------------------+------------------------------------------------------------------------+
<span class="token number">5</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 给 root 重设本地密码</span>
alter user <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> identified by <span class="token string">&#39;\${password}&#39;</span><span class="token punctuation">;</span>
flush privileges<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成后，即可在本地通过 <code>mysql -u root -p</code>，输入密码后登陆。</p><h3 id="👩‍🚒-远程连接-mysql-数据库" tabindex="-1"><a class="header-anchor" href="#👩‍🚒-远程连接-mysql-数据库" aria-hidden="true">#</a> 👩‍🚒 远程连接 MySQL 数据库</h3><h4 id="更改用户-host" tabindex="-1"><a class="header-anchor" href="#更改用户-host" aria-hidden="true">#</a> 更改用户 host</h4><p>当前数据裤里的账户都只能通过本地 <code>localhost</code> 进行连接，如果需要创建 <code>host</code> 为 <code>%</code> 的用户，或者更改已有账户的 <code>host</code>。</p><ul><li>🌰 更改 root 用户</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use mysql<span class="token punctuation">;</span>
update user <span class="token builtin class-name">set</span> <span class="token assign-left variable">host</span><span class="token operator">=</span><span class="token string">&#39;%&#39;</span> where <span class="token assign-left variable">user</span><span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>🌰 创建新用户（推荐）</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建新用户</span>
create user <span class="token string">&#39;your_name&#39;</span>@<span class="token string">&#39;%&#39;</span> identified by <span class="token string">&#39;your_password&#39;</span><span class="token punctuation">;</span>
<span class="token comment"># 更改权限</span>
grant all privileges on *.* to <span class="token string">&#39;your_name&#39;</span>@<span class="token string">&#39;%&#39;</span> with grant option<span class="token punctuation">;</span>
flush privileges<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里也可以创建一个 <code>user=root; host=%</code> 的新账户，这两个 <code>root</code> 用户具有不同的密码。本地密码可以简单一点，方便使用；远程密码复杂一点，更加安全。</p><div class="custom-container warning"><p class="custom-container-title">🚧 警告</p><p>授权时，请注意根据自身情况，给 MySQL 账户权限。</p></div><h4 id="更改配置文件" tabindex="-1"><a class="header-anchor" href="#更改配置文件" aria-hidden="true">#</a> 更改配置文件</h4><p>更改配置文件 <code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>。找到 <code>bind-address</code>，将其注释，或改成 <code>0.0.0.0</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/mysql/mysql.conf.d/mysqld.cnf

<span class="token comment"># 更改配置文件</span>
bind-address    <span class="token operator">=</span> <span class="token number">0.0</span>.0.0

<span class="token comment"># 重启 MySQL 服务</span>
<span class="token function">sudo</span> systemctl restart mysql.server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙" aria-hidden="true">#</a> 防火墙</h4><p>如果有防火墙（如国内厂商的云服务器），打开 MySQL 服务器的端口号。默认为 <code>3306</code>。</p><h2 id="安装指定版本" tabindex="-1"><a class="header-anchor" href="#安装指定版本" aria-hidden="true">#</a> 安装指定版本</h2><p>如果有安装指定版本的 MySQL 数据库需求，例如在较新版本的 ubuntu 系统中安装旧版数据库，可以在 MySQL 官网下载安装包或二进制文件进行安装。</p>`,38),u={href:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer"},m=s("p",null,[s("img",{src:r,alt:"download"})],-1),v=s("p",null,"可以选择下载：",-1),b=s("ul",null,[s("li",null,[n("🌰 "),s("code",null,".tar"),n(" 解压到指定文件夹；")]),s("li",null,[n("🌰 "),s("code",null,".deb"),n(" 安装包使用 "),s("code",null,"dpkg"),n(" 安装。")])],-1),k={href:"https://mirrors.aliyun.com/mysql",target:"_blank",rel:"noopener noreferrer"},h=s("h2",{id:"使用-docker-安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用-docker-安装","aria-hidden":"true"},"#"),n(" 使用 Docker 安装")],-1),_={href:"https://hub.docker.com/_/mysql",target:"_blank",rel:"noopener noreferrer"},y=l(`<ul><li>拉取镜像</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mysql
<span class="token comment"># 指定版本</span>
<span class="token function">docker</span> pull mysql:8.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建容器并运行</li></ul><p>直接启动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> docker-mysql <span class="token punctuation">\\</span>
    <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>my-secret-pw <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">13306</span>:3306 <span class="token punctuation">\\</span>
    <span class="token parameter variable">-d</span> mysql:tag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>挂载数据目录到容器外：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建一个挂载目录</span>
mikdir /my/own/nysqldir

<span class="token function">docker</span> run <span class="token parameter variable">--name</span> docker-mysql <span class="token punctuation">\\</span>
    <span class="token parameter variable">-v</span> /my/own/nysqldir:/var/lib/mysql <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">13306</span>:3306 <span class="token punctuation">\\</span>
    <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>my-secret-pw <span class="token punctuation">\\</span>
    <span class="token parameter variable">-d</span> mysql:8.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),g={href:"https://hub.docker.com/_/mysql",target:"_blank",rel:"noopener noreferrer"},f=l(`<ul><li>使用容器命令行</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> docker-mysql <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,3),q={href:"https://segmentfault.com/a/1190000039203507",target:"_blank",rel:"noopener noreferrer"},S={href:"https://hub.docker.com/_/mysql?tab=description",target:"_blank",rel:"noopener noreferrer"};function x(L,M){const a=o("ExternalLinkIcon");return i(),c("div",null,[d,s("p",null,[s("a",u,[n("传送门 ➡️"),e(a)])]),m,v,b,s("blockquote",null,[s("p",null,[n("如果已经明确知道需要下载的版本号，可以在国内的一些进行源进行下载。例如：💿 "),s("a",k,[n("阿里源"),e(a)])])]),h,s("p",null,[s("a",_,[n("dockerhub MySQL 地址 🔗"),e(a)]),n("。可从此处获取一下说明，使用提示，镜像版本信息等。")]),y,s("p",null,[n("更多参数请参考 "),s("a",g,[n("dockerhub MySQL 地址 🔗"),e(a)]),n("。")]),f,s("ul",null,[s("li",null,[n("🔗 "),s("a",q,[n("https://segmentfault.com/a/1190000039203507"),e(a)])]),s("li",null,[n("🔗 "),s("a",S,[n("https://hub.docker.com/_/mysql?tab=description"),e(a)])])])])}const A=t(p,[["render",x],["__file","mysql.html.vue"]]);export{A as default};
